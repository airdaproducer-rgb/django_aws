The file contains django models. i will provide the frontend features so as you can build the backend codes and the frontend codes. the aim is to admin to manage and make decision:
1.BASE TEMPLATE:
-the header should contain items such as Home,Dashboard,Login/Logout,airapp

2.LIST TEMPLATE:
-A row that contains a plus icon for uploading, search bar,search button.
-Another row for bulk action(deactivate,delete,activate),time date range filtering
-table that contains columns for title,thumbnail,description,metadata(youtube_link,is_active,timestamp,timestamp_modified,passwords,admin_notes),statistics(viewers,comments),actions(edit,delete,deactivate)
-Graphs for viewers,search and comments

3.SEARCH PAGES:
-overview details such as total search query,average results and other.
-a table that contains all search queries and all the metadatas from the models.
-A graph that shows a search queries against time: here admin can filter by entering date ranges.

4.COMMENT PAGES:
-overview details such as totla comment,average comments per youtube video and other.
-a table that breaksdown each and everycomment. relating to the youtube video and other metrics
-A graph that shows a comment against time: here admin can filter by entering date ranges.

5.CREATE & UPDATE PAGES,DELETE PAGES:
-The page has to contain instructions card at the right side of the form by default.

6.DETAIL PAGES:
-the detailed informations for a single video querying all features from point 2.


NOTE:
-make modifications to class SearchHistory(models.Model) by adding another models that track search results from the database, it should have foreignkey relationship
-for urls startwith 'youtube:...', this is because app_name = 'youtube'.
-for template_path in views startwith 'tutorial/admn/..'. use css,html,fontawesome icons,jquery with named urls. never use bootstrap or tailwindcss.never make use of custom templatetags such as |split,|get_item or any.
-for views and comment submission make sure you avoid the use of csrf_exemption. also handle both auth & non-auth users.the naming context of views has to startwith YA...
-make modifications to class ViewerHistory(models.Model) so as it can track viewers to bot list page and detail page. this distinction has to be precise
-All models except class YoutubeVideo(models.Model) should handle tracking of records for both auth & non-auth users.